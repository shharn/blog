version: "3"
services:
    front-app:
        build: ./client
        volumes:
            - "./client/src:/app/src"
        deploy:
            replicas: 1
            restart_policy:
                condition: on-failure
            resources:
                limits:
                    cpus: '0.2'
                    memory: 256M
        networks:
            - frontend
        depends_on:
            - api-server
        ports:
            - "3000:3000"

    api-server:
        build: "./server"
        volumes:
            - ./server/src:/go/src
        depends_on:
            - redis
            - dgraph-zero
        networks:
            - frontend
            - backend
        deploy:
            replicas: 1
        ports:
            - "10000:10000"
        restart: always

    redis:
        image: redis
        networks:
            - backend
        deploy:
          resources:
              limits:
                  cpus: '0.1'
                  memory: 128M
        ports:
            - "6379:6379"

    dgraph-zero:
        image: dgraph/dgraph:v1.0.5
        volumes:
            - dgraph:/dgraph
        networks:
            - backend
            - database
        ports:
            - 5080:5080 # For grpc
            - 6080:6080 # For http
        restart: on-failure
        command: dgraph zero --my=dgraph-zero:5080
        # https://github.com/dgraph-io/dgraph/blob/master/dgraph/cmd/zero/run.go

    dgraph-server:
        image: dgraph/dgraph:v1.0.5
        volumes:
            - dgraph:/dgraph
        networks:
            - database
        ports:
            - 7080:7080 # For internal usage
            - 8080:8080 # For http
            - 9080:9080 # For grpc
        restart: on-failure
        command: dgraph server --my=dgraph-server:7080 --lru_mb=2048 --zero=dgraph-zero:5080
        # https://github.com/dgraph-io/dgraph/blob/master/dgraph/cmd/server/run.go#L59-L124

    dgraph-ratel:
        image: dgraph/dgraph:v1.0.5
        volumes:
            - dgraph:/dgraph
        networks:
            - database
        ports:
            - 8000:8000
        command: dgraph-ratel
    
networks:
    frontend:
    backend:
    database:

volumes:
    dgraph:
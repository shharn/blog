version: "3.2"
services:
    front:
        build:
            context: ./client
            dockerfile: Dockerfile.dev
        image: blog-front:dev
        environment:
            - NODE_ENV=development
            - DEVELOPMENT=1
        volumes:
            - "./client:/app"
            - /app/node_modules/
            - /app/public
        networks:
            - frontend
        ports:
            - "3000:3000"

    api-server:
        build: 
            context: "./server"
            dockerfile: Dockerfile.dev
        image: blog-api-server:dev
        volumes:
            - ./server/src/github.com/shharn:/go/src/github.com/shharn
        networks:
            - frontend
            - backend
            - database
        ports:
            - "5000:5000"
        restart: always

    dgraph-zero:
        image: dgraph/dgraph:v1.0.9
        volumes:
            - type: volume
              source: dgraph
              target: /dgraph
              volume:
                  nocopy: true
        ports:
            - 5080:5080 # For grpc
            - 6080:6080 # For http
        restart: on-failure
        networks:
            - database
        command: dgraph zero --my=dgraph-zero:5080
        # https://github.com/dgraph-io/dgraph/blob/master/dgraph/cmd/zero/run.go

    dgraph-server:
        image: dgraph/dgraph:v1.0.9
        volumes:
            - type: volume
              source: dgraph
              target: /dgraph
              volume:
                  nocopy: true
        ports:
            - 8080:8080 # For http
            - 9080:9080 # For grpc
        restart: on-failure
        networks:
            - database
            - backend
        command: dgraph server --my=dgraph-server:7080 --lru_mb=2048 --zero=dgraph-zero:5080
        # https://github.com/dgraph-io/dgraph/blob/master/dgraph/cmd/server/run.go#L59-L124

    dgraph-ratel:
        image: dgraph/dgraph:v1.0.9
        volumes:
            - type: volume
              source: dgraph
              target: /dgraph
              volume:
                  nocopy: true
        ports:
            - 8000:8000
        networks:
            - database
        command: dgraph-ratel
networks:
    frontend:
    backend:
    database:

volumes:
    dgraph:
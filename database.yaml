apiVersion: v1
kind: Service
metadata:
    name: dgraph
    labels:
        db: dgraph
spec:
    ports:
    - port: 80
      name: dgraph-service
    clusterIP: None
    selector:
        db: dgraph
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
    name: dgraph
spec:
    selector:
        matchLabels:
            db: dgraph
            tier: backend
    serviceName: "dgraph"
    replicas: 1 # default value
    template:
        metadata:
            labels:
                db: dgraph
                tier: backend
        spec:
            terminationGracePeriodSeconds: 20
            containers:
            - name: dgraph-zero
              image: dgraph/dgraph:1.0.9
              command: ["dgraph", "zero", "--my=dgraph-zero:5080"]
              ports:
              - containerPort: 5080
                name: grpc
              - containerPort: 6080
                name: http
              volumeMounts:
              - name: dgraph
                mountPath: /usr/share/data/dgraph
            - name: dgraph-server
              image: dgraph/dgraph:1.0.9
              command: ["dgraph", "server", "--my-dgraph-server:7080", "--lru_mb=2048", "--zero=dgraph-zero:5080"]
              ports:
              - containerPort: 8080
                name: http
              - containerPort: 9080
                name: grpc
              volumeMounts:
              - name: dgraph
                mountPath: /usr/share/data/dgraph
    volumeClaimTemplates:
    - metadata:
          name: dgraph
      spec:
          accessModes: ["ReadWriteOnce"]
          storageClassName: "dgraph" # Why need it?
          resources:
            requests:
                storage: 5Gi